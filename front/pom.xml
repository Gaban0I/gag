<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>fr.cnp.gag</groupId>
		<artifactId>gag</artifactId>
		<version>1.0.3-SNAPSHOT</version>
	</parent>

	<artifactId>gag-front</artifactId>
	<packaging>war</packaging>
	<name>gag - front</name>
	<description>Module front du projet GAG</description>

	<!-- opérations de construction -->
	<build>
		<plugins>
			<!-- plugin "frontend" pour npm/node -->
			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>1.9.1</version>

				<configuration>
					<!-- versions de node -->
					<nodeVersion>v16.14.2</nodeVersion>
					<nodeDownloadRoot>https://udd-nexus.cnp.fr/nexus/repository/nodejs-central/</nodeDownloadRoot>
					<npmVersion>8.5.0</npmVersion>
					<npmDownloadRoot>https://udd-nexus.cnp.fr/nexus/repository/npmjs-central/npm/-/</npmDownloadRoot>
					<!-- répertoire où va être installé l'environnement node -->
					<installDirectory>target</installDirectory>
				</configuration>

				<executions>
					<!-- installation node+npm -->
					<execution>
						<id>install node and npm</id>
						<goals>
							<goal>install-node-and-npm</goal>
						</goals>
						<phase>generate-resources</phase>
					</execution>
					<!-- dans les exécutions suivantes, le plugin exécute 'npm $params' où $params est la chaîne donnée dans la balise "arguments" -->
					<!-- npm install du projet -->
					<execution>
						<id>npm install</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<phase>generate-resources</phase>
						<configuration>
							<arguments>run configure-install</arguments>
						</configuration>
					</execution>
					<!-- build de l'application en version livrable -->
					<execution>
						<id>ng build</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<phase>compile</phase>
						<configuration>
							<arguments>run build</arguments>
						</configuration>
					</execution>
					<!-- exécution des tests unitaires 
					<execution>
						<id>npm test</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<phase>test</phase>
						<configuration>
							<arguments>run test</arguments>
						</configuration>
					</execution>-->
				</executions>
<!-- 				<configuration> -->
<!-- 					<nodeVersion>v12.18.4</nodeVersion> -->
<!-- 					<npm.version>v6.12.0</npm.version> -->
<!-- 					<nodeDownloadRoot>https://udd-nexus.cnp.fr/nexus/repository/nodejs-central/</nodeDownloadRoot> -->
<!-- 					<npmDownloadRoot>https://udd-nexus.cnp.fr/nexus/repository/npmjs-central/npm/-/</npmDownloadRoot> -->
<!-- 					<installDirectory>target</installDirectory> -->
<!-- 				</configuration> -->
			</plugin>
            <!-- on créé un war pour faire entrer l'application dans la procédure 
				d'installation devops -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<!-- on n'a pas de web.xml, puisqu'on n'est pas jee -->
					<failOnMissingWebXml>false</failOnMissingWebXml>
					<archive>
						<index>true</index>
					</archive>
					<!-- on ajoute le répertoire destination de 'npm run build' -->
					<webResources>
						<resource>
							<directory>dist</directory>
						</resource>
					</webResources>
					<!-- on ne prend pas le fichier de properties qui est externalisé, le 
						fichier présent dans les sources sert aux tests -->
					<packagingExcludes>**/application.properties</packagingExcludes>
				</configuration>
			</plugin>
			<!-- nettoyage : comme on a un packaging pom.xml, target n'est pas détruit 
				par le clean standard, on le rajoute donc ici -->
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<configuration>
					<failOnError>false</failOnError>
					<filesets>
						<fileset>
							<directory>target</directory>
						</fileset>
						<fileset>
							<directory>node_modules</directory>
						</fileset>
						<fileset>
							<directory>dist</directory>
						</fileset>
						<fileset>
							<directory>bin</directory>
						</fileset>
						<fileset>
							<directory>lib</directory>
						</fileset>
						<fileset>
							<directory>etc</directory>
						</fileset>
						<fileset>
							<directory>coverage</directory>
						</fileset>
						<fileset>
							<directory>typings</directory>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>